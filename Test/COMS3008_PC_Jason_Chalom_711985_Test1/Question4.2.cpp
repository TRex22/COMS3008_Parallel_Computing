/*
COMS 3008 PC Test 1
Jason Chalom 711985
Question 4.2
*/

#include "stdio.h"
#include "omp.h"
#include <iostream>
#include <cmath>
#include <fstream>
#include "stdlib.h"

using namespace std;

//program will show 4 tasks running concurrently in sections
//this will calculate the average of random numbers generated by the 4 sections in parallel
//each section generates 100 numbers

const double count = 100.00;

int main (int argc, char** argv)
{
	srand(time(NULL));
	
	omp_set_num_threads(4); // same as test computer's number of cores
	
	double sum1 = 0.0;
	double sum2 = 0.0;
	double sum3 = 0.0;
	double sum4 = 0.0;
	
	//each function processing unit has a section which to work on
	//the concurrency here is 4
	#pragma omp parallel
	{
		#pragma omp sections
		{
			#pragma omp section 
			{
				for (int i = 0; i < count; i ++)
				{
					sum1 += (double)rand() ;
				}
			}
			
			#pragma omp section 
			{
				for (int i = 0; i < count; i ++)
				{
					sum2 += (double)rand() ;
				}
			}
			
			#pragma omp section 
			{
				for (int i = 0; i < count; i ++)
				{
					sum3 += (double)rand() ;
				}
			}
			
			#pragma omp section 
			{
				for (int i = 0; i < count; i ++)
				{
					sum4 += (double)rand() ;
				}
			}
		}
	}
	
	double average = (sum1 / count) + (sum2 / count) + (sum3 / count) + (sum4 / count);
	
	cout << "The average is: " << average << endl;
	
	return 0;
}
